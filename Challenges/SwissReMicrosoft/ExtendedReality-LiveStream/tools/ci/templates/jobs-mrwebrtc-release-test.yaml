# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# [TEMPLATE] Test native mrwebrtc NuGet packages (Desktop and UWP)

parameters:
# Package agent pool
- name: testAgent
  type: string
  default: ''
# Package platform
- name: testPlatform
  type: string
  default: ''
  values:
  - 'Desktop'
  - 'UWP'
# NuGet package version (SemVer)
- name: nugetPackageVersion
  type: string
  default: ''

jobs:
- job: mrwebrtc_test_${{parameters.testPlatform}}
  timeoutInMinutes: 360
  pool:
    name: ${{parameters.testAgent}}
    demands:
    - msbuild
    - vstest
  steps:

  # Compute package name
  - task: PythonScript@0
    displayName: 'Compute package name'
    inputs:
      scriptSource: inline
      script: |
        import sys;
        platform = sys.argv[1];
        print("Platform : %s" % platform);
        if (platform == 'Desktop'):
          packageName = "mrwebrtc"
        elif (platform == 'UWP'):
          packageName = "mrwebrtc_uwp"
        else:
          print("##vso[task.complete result=Failed;]Unknown platform %s" % platform)
          sys.exit(1)
        print("NuGet package name : %s" % packageName)
        print("##vso[task.setvariable variable=packageName;]%s" % packageName)
      arguments: '${{parameters.testPlatform}}'

  # Checkout
  - checkout: self
    fetchDepth: '50'
    clean: true

  # Use NuGet 5.2.0 to work around auth issues in previous versions
  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet 5.2.0'
    inputs:
      versionSpec: 5.2.0

  # Download NuGet package
  - task: DownloadPipelineArtifact@2
    displayName: 'Download mrwebrtc library (${{parameters.testPlatform}})'
    inputs:
      source: 'current'
      artifact: 'nuget_mrwebrtc_${{parameters.testPlatform}}'
      patterns: '**/$(packageName).${{parameters.nugetPackageVersion}}.nupkg'
      path: '$(Build.BinariesDirectory)/nuget/$(packageName)'

  # Check package signing
  - task: PowerShell@2
    displayName: 'Check signing'
    inputs:
      targetType: 'filePath'
      filePath: 'tools/ci/checkSigning.ps1'
      arguments: '-PackageFolder "$(Build.BinariesDirectory)/nuget/$(packageName)" -TempFolder "$(Build.BinariesDirectory)/unpack/$(packageName)"'
