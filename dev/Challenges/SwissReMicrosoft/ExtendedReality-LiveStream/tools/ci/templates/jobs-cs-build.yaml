# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# [TEMPLATE] Compile C# library Microsoft.MixedReality.WebRTC.dll and run tests

parameters: 
  buildAgent: ''
  buildConfig: ''      # Debug|Release
  publishArtifacts: false
  withTesting: false
 
jobs:

# Compile Microsoft.MixedReality.WebRTC.dll
- job: cs_${{parameters.buildConfig}}
  timeoutInMinutes: 60
  pool:
    name: '${{parameters.buildAgent}}'
    demands: vstest
  steps:
  - checkout: self

  # Build Microsoft.MixedReality.WebRTC (Debug, incremental build)
  - ${{ if eq(parameters.buildConfig, 'Debug') }}:
    - task: DotNetCoreCLI@2
      displayName: 'Build C# WebRTC lib (AnyCPU-Debug) [incremental]'
      inputs:
        projects: 'libs/Microsoft.MixedReality.WebRTC/Microsoft.MixedReality.WebRTC.csproj'
        arguments: '-f netstandard2.0 -c Debug'
        workingDirectory: 'libs/Microsoft.MixedReality.WebRTC'

  # Build Microsoft.MixedReality.WebRTC (Release, full build)
  - ${{ if eq(parameters.buildConfig, 'Release') }}:
    - task: DotNetCoreCLI@2
      condition: succeededOrFailed() # Build even previous task failed
      displayName: 'Build C# WebRTC lib (AnyCPU-Release) [full build]'
      inputs:
        projects: 'libs/Microsoft.MixedReality.WebRTC/Microsoft.MixedReality.WebRTC.csproj'
        arguments: '-f netstandard2.0 --no-incremental -c Release'
        workingDirectory: 'libs/Microsoft.MixedReality.WebRTC'

  # Move artifacts to publish only what needed
  - ${{ if eq(parameters.publishArtifacts, 'true') }}:
    - powershell: |
        # Ensure destination folder exists
        New-Item -Path "$env:STAGEDIR" -ItemType Directory -Force -ErrorAction Ignore

        # Copy DLL, PDB, and Intellisense docs (XML) from Release build
        Copy-Item -Force -Path "$env:SOURCEDIR/Microsoft.MixedReality.WebRTC.dll" -Destination "$env:STAGEDIR"
        Copy-Item -Force -Path "$env:SOURCEDIR/Microsoft.MixedReality.WebRTC.pdb" -Destination "$env:STAGEDIR"
        Copy-Item -Force -Path "$env:SOURCEDIR/Microsoft.MixedReality.WebRTC.xml" -Destination "$env:STAGEDIR"

      displayName: 'Stage C# WebRTC lib'
      env:
        SOURCEDIR: 'bin/netstandard2.0/${{parameters.buildConfig}}'
        STAGEDIR: '$(Build.ArtifactStagingDirectory)/Microsoft.MixedReality.WebRTC/'

  # Publish Microsoft.MixedReality.WebRTC.dll and associated files (PDB, ...)
  - ${{ if eq(parameters.publishArtifacts, 'true') }}:
    - task: PublishPipelineArtifact@0
      displayName: 'Publish C# WebRTC lib'
      inputs:
        artifactName: 'cslib_${{parameters.buildConfig}}'
        targetPath: '$(Build.ArtifactStagingDirectory)/Microsoft.MixedReality.WebRTC'

  # Download mrwebrtc.dll (Win32-x64-buildConfig) for testing
  - ${{ if eq(parameters.withTesting, 'true') }}:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download mrwebrtc library (Win32-x64-${{parameters.buildConfig}})'
      inputs:
        source: 'current'
        artifact: 'mrwebrtc_Win32-x64-${{parameters.buildConfig}}'
        patterns: '**/*.@(pdb|dll)'
        path: 'bin/Win32/x64/${{parameters.buildConfig}}'

  # Build C# tests
  - ${{ if eq(parameters.withTesting, 'true') }}:
    - task: DotNetCoreCLI@2
      displayName: 'Build C# Tests (x64-${{parameters.buildConfig}}) [incremental]'
      inputs:
        projects: tests/Microsoft.MixedReality.WebRTC.Tests/Microsoft.MixedReality.WebRTC.Tests.csproj
        arguments: '-c ${{parameters.buildConfig}} -p:DisableDeviceTests=1 -p:Platform=x64'
        workingDirectory: 'tests/Microsoft.MixedReality.WebRTC.Tests/'

  # Run tests (Win32-x64-buildConfig)
  - ${{ if eq(parameters.withTesting, 'true') }}:
    - task: VSTest@2
      displayName: 'C# Testing (mrwebrtc Win32-x64-${{parameters.buildConfig}} / C# ${{parameters.buildConfig}})'
      inputs:
        testAssemblyVer2: 'Microsoft.MixedReality.WebRTC.Tests.dll'
        searchFolder: 'bin/netstandard2.0/${{parameters.buildConfig}}'
        runOnlyImpactedTests: false
