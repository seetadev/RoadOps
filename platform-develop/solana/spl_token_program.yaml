cidl: "0.8"
info:
  name: csl_spl_token
  title: |-
    CÃ³digo Standard Library for Solana Programs Library
  summary:
  version: 0.0.0
  contact:
    name: Codigo
    web: https://codigo.ai
    git: https://github.com/Codigo-ai
    email: support@codigo.ai
  license:
    name: Codigo
    url: https://codigo.ai/documents/Codigo---Terms-of-Service.pdf
types:
  Mint:
    summary: Mint data.
    solana:
      owner: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
    fields:
      - name: mint_authority
        type: rs:c_option<sol:pubkey>
        description: |-
          Optional authority used to mint new tokens. The mint authority may only be provided during
          mint creation. If no mint authority is present then the mint has a fixed supply and no
          further tokens may be minted.
      - name: supply
        type: u64
        description: Total supply of tokens.
      - name: decimals
        type: u8
        description: Number of base 10 digits to the right of the decimal place.
      - name: is_initialized
        type: bool
        description: Is `true` if this structure has been initialized
      - name: freeze_authority
        type: rs:c_option<sol:pubkey>
        description: Optional authority to freeze token accounts.
  Account:
    summary: Account data
    solana:
      owner: ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL
      seeds:
        - name: wallet
          type: sol:pubkey
        - name: token_program
          type: sol:pubkey
        - name: mint
          type: sol:pubkey
    fields:
      - name: mint
        type: sol:pubkey
        description: The mint associated with this account
      - name: owner
        type: sol:pubkey
        description: The owner of this account.
      - name: amount
        type: u64
        description: The amount of tokens this account holds.
      - name: delegate
        type: rs:c_option<sol:pubkey>
        description: |-
          If `delegate` is `Some` then `delegated_amount` represents
          the amount authorized by the delegate
      - name: state
        type: u8
        description: |-
          The account's state. 
          AccountState enum can be Uninitialized, Initialized, Frozen.
          Default value is Uninitialized
      - name: is_native
        type: rs:c_option<u64>
        description: |-
          If is_native.is_some, this is a native token, and the value logs the rent-exempt reserve. An
          Account is required to be rent-exempt, so the value is used by the Processor to ensure that
          wrapped SOL accounts do not drop below this threshold.
      - name: delegated_amount
        type: u64
        description: The amount delegated
      - name: close_authority
        type: rs:c_option<sol:pubkey>
        description: Optional authority to close the account.
methods:
  - name: approve
    summary: |-
      Approves a delegate.  A delegate is given the authority over tokens on
      behalf of the source account's owner.
    solana:
      signers:
        - name: owner
    inputs:
      - name: source
        type: sol:account_info
        description: The source account.
        solana:
          attributes: [ mut ]
      - name: delegate
        type: sol:account_info
        description: The delegate.
      - name: owner
        type: sol:account_info
        description: The source account owner.
      - name: amount
        type: u64
  - name: approve_checked
    summary: |-
      Approves a delegate.  A delegate is given the authority over tokens on
      behalf of the source account's owner.
      
      This instruction differs from Approve in that the token mint and
      decimals value is checked by the caller.  This may be useful when
      creating transactions offline or within a hardware wallet.
    solana:
      signers:
        - name: owner
    inputs:
      - name: source
        type: sol:account_info
        description: The source account.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The token mint.
      - name: delegate
        type: sol:account_info
        description: The delegate.
      - name: owner
        type: sol:account_info
        description: The source account owner.
      - name: amount
        type: u64
        description: The amount of tokens the delegate is approved for.
      - name: decimals
        type: u8
        description: Expected number of base 10 digits to the right of the decimal place.
  - name: burn
    summary: |-
      Burns tokens by removing them from an account.  `Burn` does not support
      accounts associated with the native mint, use `CloseAccount` instead.
    solana:
      signers:
        - name: owner
    inputs:
      - name: account
        type: Account
        description: The account to burn from.
        solana:
          attributes: [ mut ]
          seeds:
            wallet: wallet
            token_program: token_program
            mint: mint
      - name: mint
        type: Mint
        description: The token mint.
        solana:
          attributes: [ mut ]
      - name: owner
        type: sol:account_info
        description: The account's owner/delegate.
      - name: wallet
        type: sol:account_info
        description: Wallet address for the new associated token account
        solana:
          owner: 11111111111111111111111111111111
      - name: token_program
        type: sol:account_info
        description: SPL Token program
        solana:
          address: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
      - name: amount
        type: u64
        description: The amount of tokens to burn.
  - name: freeze_account
    summary: Freeze an Initialized account using the Mint's freeze_authority (if set).
    solana:
      signers:
        - name: owner
    inputs:
      - name: account
        type: sol:account_info
        description: The account to freeze.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The token mint.
      - name: owner
        type: sol:account_info
        description: The mint freeze authority.
  - name: close_account
    summary: |-
      Close an account by transferring all its SOL to the destination account.
      Non-native accounts may only be closed if its token amount is zero.
    solana:
      signers:
        - name: owner
    inputs:
      - name: account
        type: sol:account_info
        description: The account to close.
        solana:
          attributes: [ mut ]
      - name: destination
        type: sol:account_info
        description: The destination account.
        solana:
          attributes: [ mut ]
      - name: owner
        type: sol:account_info
        description: The account's owner.
  - name: initialize_account
    summary: |-
      Initializes a new account to hold tokens.  If this account is associated
      with the native mint then the token balance of the initialized account
      will be equal to the amount of SOL in the account. If this account is
      associated with another mint, that mint must be initialized before this
      command can succeed.
      
      The `InitializeAccount` instruction requires no signers and MUST be
      included within the same Transaction as the system program's
      `CreateAccount` instruction that creates the account being initialized.
      Otherwise another party can acquire ownership of the uninitialized
      account.
    solana:
      default-payer: false
    inputs:
      - name: account
        type: sol:account_info
        description: The account to initialize.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The mint this account will be associated with.
      - name: owner
        type: sol:account_info
        description: The new account's owner/multisignature.
      - name: rent_sysvar
        type: sol:account_info
        description: Rent sysvar
        solana:
          address: SysvarRent111111111111111111111111111111111
  - name: initialize_account2
    summary: |-
      Like InitializeAccount, but the owner pubkey is passed via instruction data
      rather than the accounts list. This variant may be preferable when using
      Cross Program Invocation from an instruction that does not need the owner's
      `AccountInfo` otherwise.
    solana:
      default-payer: false
    inputs:
      - name: account
        type: sol:account_info
        description: The account to initialize.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The mint this account will be associated with.
      - name: rent_sysvar
        type: sol:account_info
        description: Rent sysvar
        solana:
          address: SysvarRent111111111111111111111111111111111
      - name: owner
        type: sol:pubkey
        description: The new account's owner/multisignature.
  - name: initialize_account3
    solana:
      default-payer: false
    summary: Like InitializeAccount2, but does not require the Rent sysvar to be provided
    inputs:
      - name: account
        type: sol:account_info
        description: The account to initialize.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The mint this account will be associated with.
      - name: owner
        type: sol:pubkey
        description: The new account's owner/multisignature.
  - name: initialize_mint
    summary: |-
      Initializes a new mint and optionally deposits all the newly minted tokens in an account.

      The `InitializeMint` instruction requires no signers and MUST be
      included within the same Transaction as the system program's
      `CreateAccount` instruction that creates the account being initialized.
      Otherwise another party can acquire ownership of the uninitialized
      account.
    solana:
      default-payer: false
    inputs:
      - name: mint
        type: Mint
        solana:
          attributes: [ mut ]
      - name: rent_sysvar
        type: sol:account_info
        solana:
          address: SysvarRent111111111111111111111111111111111
      - name: decimals
        type: u8
        description: Number of base 10 digits to the right of the decimal place.
      - name: mint_authority
        type: sol:pubkey
        description: The authority/multisignature to mint tokens.
      - name: freeze_authority
        type: rs:c_option<sol:pubkey>
        description: The freeze authority/multisignature of the mint.
  - name: initialize_mint2
    summary: Like [`InitializeMint`], but does not require the Rent sysvar to be provided
    solana:
      default-payer: false
    inputs:
      - name: mint
        type: Mint
        solana:
          attributes: [ mut ]
      - name: decimals
        type: u8
        description: Number of base 10 digits to the right of the decimal place.
      - name: mint_authority
        type: sol:pubkey
        description: The authority/multisignature to mint tokens.
      - name: freeze_authority
        type: rs:c_option<sol:pubkey>
        description: The freeze authority/multisignature of the mint.
  - name: mint_to
    summary: Mints new tokens to an account.  The native mint does not support minting.
    solana:
      signers:
        - name: owner
    inputs:
      - name: mint
        type: Mint
        description: The mint.
        solana:
          attributes: [ mut ]
      - name: assoc_token_account
        type: Account
        description: The account to mint tokens to.
        solana:
          attributes: [ mut ]
          seeds:
            wallet: wallet
            token_program: token_program
            mint: mint
      - name: owner
        type: sol:account_info
        description: The mint's minting authority.
      - name: wallet
        type: sol:account_info
        description: Wallet address for the new associated token account
        solana:
          owner: 11111111111111111111111111111111
      - name: token_program
        type: sol:account_info
        description: SPL Token program
        solana:
          address: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
      - name: amount
        type: u64
        description: The amount of new tokens to mint.
  - name: revoke
    summary: Revokes the delegate's authority.
    solana:
      signers:
        - name: owner
    inputs:
      - name: source
        type: sol:account_info
        description: The source account.
        solana:
          attributes: [ mut ]
      - name: owner
        type: sol:account_info
        description: The source account owner.
  - name: set_authority
    summary: Sets a new authority of a mint or account.
    solana:
      signers:
        - name: owner
    inputs:
      - name: mint
        type: Mint
        description: The mint or account to change the authority of.
        solana:
          attributes: [ mut ]
      - name: owner
        type: sol:account_info
        description: The current authority of the mint or account.
      - name: authority_type
        type: u8
        description: The type of authority to update.
      - name: new_authority
        type: rs:c_option<sol:pubkey>
  - name: sync_native
    summary: |-
      Given a wrapped / native token account (a token account containing SOL)
      updates its amount field based on the account's underlying `lamports`.
      This is useful if a non-wrapped SOL account uses `system_instruction::transfer`
      to move lamports to a wrapped token account, and needs to have its token
      `amount` field updated.
    solana:
      default-payer: false
    inputs:
      - name: account
        type: sol:account_info
        description: The native token account to sync with its underlying lamports.
        solana:
          attributes: [ mut ]
  - name: thaw_account
    summary: Thaw a Frozen account using the Mint's freeze_authority (if set).
    solana:
      signers:
        - name: owner
    inputs:
      - name: account
        type: sol:account_info
        description: The account to freeze.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The token mint.
      - name: owner
        type: sol:account_info
        description: The mint freeze authority.
  - name: transfer
    summary: |-
      Transfers tokens from one account to another either directly or via a
      delegate.  If this account is associated with the native mint then equal
      amounts of SOL and Tokens will be transferred to the destination
      account.
    solana:
      signers:
        - name: authority
    inputs:
      - name: source
        type: sol:account_info
        description: The source account.
        solana:
          attributes: [ mut ]
      - name: destination
        type: sol:account_info
        description: The destination account.
        solana:
          attributes: [ mut ]
      - name: authority
        type: sol:account_info
        description: The source account's owner/delegate.
      - name: amount
        type: u64
        description: The amount of tokens to transfer.
  - name: transfer_checked
    summary: |-
      Transfers tokens from one account to another either directly or via a
      delegate.  If this account is associated with the native mint then equal
      amounts of SOL and Tokens will be transferred to the destination
      account.
      
      This instruction differs from Transfer in that the token mint and
      decimals value is checked by the caller.  This may be useful when
      creating transactions offline or within a hardware wallet.
    solana:
      signers:
        - name: authority
    inputs:
      - name: source
        type: sol:account_info
        description: The source account.
        solana:
          attributes: [ mut ]
      - name: mint
        type: Mint
        description: The token mint.
      - name: destination
        type: sol:account_info
        description: The destination account.
        solana:
          attributes: [ mut ]
      - name: authority
        type: sol:account_info
        description: The source account's owner/delegate.
      - name: amount
        type: u64
        description: The amount of tokens to transfer.
      - name: decimals
        type: u8
        description: Expected number of base 10 digits to the right of the decimal place.